# tasks file for roles/oc_kubeadmin
- name: Read kubeadmin password from Vault
  community.hashi_vault.vault_read:
    url: '{{ vault_addr }}'
    token: '{{ vault_token }}'
    path: '{{ vault_path }}/{{ oc_kubeadmin_cluster_name }}'
    ca_cert: '{{ vault_ca_cert | default(omit) }}'
  environment:
    VAULT_SKIP_VERIFY: "true"
  register: vault_kubeadmin
  failed_when: vault_kubeadmin.failed or (vault_kubeadmin.data is not defined or vault_kubeadmin.data.data.data.kubeadmin is not defined)
  no_log: true  # Prevent vault token and password exposure in logs
  tags:
    - always

- name: Set kubeadmin password fact
  ansible.builtin.set_fact:
    oc_kubeadmin_password: '{{ vault_kubeadmin.data.data.data.kubeadmin }}'
  when: not (vault_kubeadmin.failed or (vault_kubeadmin.data is not defined or vault_kubeadmin.data.data.data.kubeadmin is not defined))
  no_log: true  # Prevent password exposure in logs
  tags:
    - always

- name: Set api host fact
  ansible.builtin.set_fact:
    oc_kubeadmin_api_host: '{{ vault_kubeadmin.data.data.data.api }}'
  when: not (vault_kubeadmin.failed or (vault_kubeadmin.data is not defined or vault_kubeadmin.data.data.data.api is not defined))
  tags:
    - always

- name: Login to OpenShift cluster with kubeadmin
  community.okd.openshift_auth:
    host: '{{ oc_kubeadmin_api_host }}'
    username: 'kubeadmin'
    password: '{{ oc_kubeadmin_password }}'
    validate_certs: false
  register: openshift_auth_results
  failed_when: openshift_auth_results.failed or (openshift_auth_results.openshift_auth.api_key is not defined)
  when: oc_kubeadmin_password is defined
  no_log: true  # Prevent password and token exposure in logs
  tags:
    - always

- name: Set return value
  ansible.builtin.set_fact:
    oc_kubeadmin_value_return: '{{ openshift_auth_results.openshift_auth.api_key }}'
  when: not openshift_auth_results.failed and openshift_auth_results.openshift_auth.api_key is defined
  no_log: true  # Prevent API key exposure in logs
  tags:
    - always

- name: "Get OpenShift node list {{ oc_kubeadmin_cluster_name }}"
  kubernetes.core.k8s_info:
    host: '{{ oc_kubeadmin_api_host }}'
    api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
    validate_certs: false
    api_version: v1
    kind: Node
  register: node_list
  when: verbose_enabled
  tags:
    - always

- name: Show node list
  ansible.builtin.debug:
    msg: 'Cluster nodes: {{ node_list.resources | map(attribute="metadata.name") | list }}'
  when: verbose_enabled
  tags:
    - always
